00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 16/06/2019 1:30:51

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Practice compilers II.
00000000                             3  * Written by : Andres Ramos Segui, Alex Mateo Fiol, Jaime Crespi Valero.
00000000                             4  * Date       : 17/06/2019
00000000                             5  * Description: Assembler code for compilers II practice.
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  * ------------------------ INCLUDES ---------------------- *
00000000                             9      INCLUDE "MACROS.X68"
00000000                            10  
00000000                            11  ASSIGNATION_INTEGER     MACRO
00000000                            12  * Macro to add.
00000000                            13  * Parameters: \1: Param1   ;Value of int or boolean
00000000                            14  *             \2: Param2   ;Offset of destination variable
00000000                            15  * Modifies  : Nothing
00000000                            16  *-----------------------------------------------------------
00000000                            17     MOVE.L \1, \2(A7)
00000000                            18     ENDM
00000000                            19  ASSIGNATION_BOOLEAN     MACRO
00000000                            20  * Macro to add.
00000000                            21  * Parameters: \1: Param1   ;Value of int or boolean
00000000                            22  *             \2: Param2   ;Offset of destination variable
00000000                            23  * Modifies  : Nothing
00000000                            24  *-----------------------------------------------------------
00000000                            25     MOVE.W \1, \2(A7)
00000000                            26     ENDM
00000000                            27  ASSIGNATION_STRING  MACRO
00000000                            28  * Macro to add.                          
00000000                            29  * Parameters: \1: Param1   ;offset variable
00000000                            30  *             \2: Param1   ;label variable
00000000                            31  *             \3: Param1   ;size string
00000000                            32  * Modifies  : D0, D1
00000000                            33  *-----------------------------------------------------------
00000000                            34      MOVE.L A7, A1
00000000                            35      ADD.L \1, A1
00000000                            36      MOVE.L \2, A2
00000000                            37      MOVE.L \3, D0
00000000                            38      CMP.L #0, D0
00000000                            39      BEQ STRING_COPIED\@
00000000                            40      CLR.L D1
00000000                            41  FILL_NEXT_CHAR\@
00000000                            42      MOVE.B (A2)+, D1
00000000                            43      MOVE.W D1, (A1)+
00000000                            44      SUB.L #2, D0
00000000                            45      CMP.L #0, D0
00000000                            46      BNE FILL_NEXT_CHAR\@
00000000                            47  STRING_COPIED\@
00000000                            48      ENDM
00000000                            49  ASSIGNATION_VARIABLE_INTEGER    MACRO
00000000                            50  * Macro to add.                          
00000000                            51  * Parameters: \1: Param1   ;source1
00000000                            52  *             \2: Param2   ;destination
00000000                            53  * Modifies  : Nothing
00000000                            54  *-----------------------------------------------------------
00000000                            55     MOVE.L \1(A7), \2(A7)
00000000                            56     
00000000                            57     ENDM
00000000                            58  ASSIGNATION_VARIABLE_BOOLEAN    MACRO
00000000                            59  * Macro to add.                          
00000000                            60  * Parameters: \1: Param1   ;source1
00000000                            61  *             \2: Param2   ;destination
00000000                            62  * Modifies  : Nothing
00000000                            63  *-----------------------------------------------------------
00000000                            64     MOVE.W \1(A7), \2(A7)
00000000                            65     
00000000                            66     ENDM
00000000                            67  ASSIGNATION_VARIABLE_STRING MACRO
00000000                            68  * Macro to add.                          
00000000                            69  * Parameters: \1: Param1   ;offset destination variable
00000000                            70  *             \2: Param1   ;remaining size of destination var
00000000                            71  *             \3: Param1   ;offset source variable
00000000                            72  *             \4: Param1   ;size source variable
00000000                            73  * Modifies  : D0
00000000                            74  *-----------------------------------------------------------    
00000000                            75      MOVE.L A7, A1
00000000                            76      ADD.L \1, A1
00000000                            77      MOVE.L \2, D1
00000000                            78      MOVE.L A7, A2
00000000                            79      ADD.L \3, A2
00000000                            80      MOVE.L \4, D2
00000000                            81      CMP.L #0, D2
00000000                            82      BEQ FILL_REMAINING_STRING\@
00000000                            83      CLR.L D3
00000000                            84  FILL_NEXT_CHAR\@
00000000                            85      MOVE.W (A2)+, D3
00000000                            86      MOVE.W D3, (A1)+
00000000                            87      SUB.L #2, D2
00000000                            88      CMP.L #0, D2
00000000                            89      BNE FILL_NEXT_CHAR\@
00000000                            90  FILL_REMAINING_STRING\@ ; If var1 = var2 and var1 > var2
00000000                            91      CMP.L #0, D1
00000000                            92      BEQ STRING_COPIED\@
00000000                            93      CLR.L D2
00000000                            94      MOVE.W #8224, D2 ;Blank space
00000000                            95  FILL_BLANK_CHAR\@
00000000                            96      MOVE.W D2, (A1)+
00000000                            97      SUB.L #2, D1
00000000                            98      CMP.L #0, D1
00000000                            99      BNE FILL_BLANK_CHAR\@   
00000000                           100  STRING_COPIED\@    
00000000                           101      ENDM
00000000                           102  RETURN_GET_INTEGER  MACRO
00000000                           103  * Macro to add. 
00000000                           104  * Parameters: \1: Param1   ; offset variable
00000000                           105  * Modifies  : A5, A6, A7
00000000                           106  *-----------------------------------------------------------
00000000                           107      CLR.L D0
00000000                           108      MOVE.L A7, A5
00000000                           109      MOVE.L A6, A7
00000000                           110      SUB.L #4, A7
00000000                           111      SUB.L #4, A7
00000000                           112      MOVE.L (A7), D0
00000000                           113      MOVE.L A5, A7
00000000                           114      MOVE.L D0, \1(A7)
00000000                           115      ENDM
00000000                           116  RETURN_GET_BOOLEAN  MACRO
00000000                           117  * Macro to add.
00000000                           118  * Parameters: \1: Param1   ; offset variable
00000000                           119  * Modifies  : D0
00000000                           120  *-----------------------------------------------------------
00000000                           121      CLR.L D0
00000000                           122      MOVE.L A7, A5
00000000                           123      MOVE.L A6, A7
00000000                           124      SUB.L #4, A7
00000000                           125      SUB.L #2, A7A
00000000                           126      MOVE.W (A7), D0
00000000                           127      MOVE.L A5, A7
00000000                           128      MOVE.W D0, \1(A7)
00000000                           129      ENDM
00000000                           130  RETURN_GET_STRING   MACRO
00000000                           131  * Macro to add.                          
00000000                           132  * Parameters: \1: Param1   ;size return string
00000000                           133  *             \2: Param1   ;offset variable
00000000                           134  *             \3: Param1   ;sizevariable
00000000                           135  * Modifies  : D0
00000000                           136  *-----------------------------------------------------------   
00000000                           137      CLR.L D0
00000000                           138      CLR.L D1
00000000                           139      MOVE.L A6, A1
00000000                           140      SUB.L #4, A1
00000000                           141      SUB.L \1, A1
00000000                           142      MOVE.L A7, A2
00000000                           143      ADD.L \2, A2
00000000                           144      MOVE.L \3, D0
00000000                           145      MOVE.L \1, D1
00000000                           146      CMP.L #0, D1
00000000                           147      BEQ FILL_STRING\@
00000000                           148  NEXT_CHAR\@
00000000                           149      MOVE.W (A1)+, D3
00000000                           150      MOVE.W D3, (A2)+
00000000                           151      SUB.L #2, D1 ;RESTAMOS 2 POR 2 BYTES
00000000                           152      CMP.L #0, D1
00000000                           153      BNE NEXT_CHAR\@
00000000                           154  FILL_STRING\@
00000000                           155      CMP.L #0, D0
00000000                           156      BEQ END_STRING\@
00000000                           157      CLR.L D1
00000000                           158      MOVE.W #8224, D1 ;blank spaces
00000000                           159  EMPTY_STRING\@
00000000                           160      MOVE.W D1, (A2)+
00000000                           161      SUB.L #2, D0
00000000                           162      CMP.L #0, D0
00000000                           163      BNE EMPTY_STRING\@
00000000                           164  END_STRING\@    
00000000                           165      ENDM
00000000                           166  PUT_STRING_IN_PARAM     MACRO
00000000                           167  * Macro to add.
00000000                           168  * Parameters: \1: offset operator
00000000                           169  *             \2: size operator
00000000                           170  *             \3: size rest
00000000                           171  *
00000000                           172  * Modifies  : D0
00000000                           173  *-----------------------------------------------------------
00000000                           174      MOVE.L A7, A1
00000000                           175      ADD.L \1, A1
00000000                           176      MOVE.L A4, A7
00000000                           177      MOVE.L \2, D0
00000000                           178      MOVE.L \3, D1
00000000                           179      CMP.L #0, D0
00000000                           180      BEQ FILL_PARAMETER\@
00000000                           181  NEXT_CHAR\@
00000000                           182      MOVE.W (A1)+, D2
00000000                           183      MOVE.W D2, (A7)+
00000000                           184      SUB.L #2, D0
00000000                           185      CMP.L #0, D0
00000000                           186      BNE NEXT_CHAR\@
00000000                           187  FILL_PARAMETER\@
00000000                           188      CMP.L #0, D1
00000000                           189      BEQ END_STRING\@
00000000                           190      CLR.L D0
00000000                           191      MOVE.W #8224, D0
00000000                           192  EMPTY_STRING\@
00000000                           193      MOVE.W D0, (A7)+
00000000                           194      SUB.L #2, D1
00000000                           195      CMP.L #0, D1
00000000                           196      BNE EMPTY_STRING\@   
00000000                           197  END_STRING\@    
00000000                           198      ENDM
00000000                           199  STANDARD_INPUT      MACRO
00000000                           200  * Macro to add.                          
00000000                           201  * Parameters: \1 ; offset variable
00000000                           202  * Modifies  : D0, D1
00000000                           203  *-----------------------------------------------------------
00000000                           204      CLR.L D0
00000000                           205      CLR.L D1
00000000                           206      MOVE.L #4, D0
00000000                           207      TRAP #15
00000000                           208      MOVE.L D1, \1(A7)
00000000                           209      ENDM
00000000                           210  ; -----------------------------------------------------------------------------
00000000                           211  OUTPUT_INTEGER      MACRO
00000000                           212  ; Input    - \1  ; Offset's variable with integer value
00000000                           213  ; Modifies - 
00000000                           214  ; -----------------------------------------------------------------------------
00000000                           215     CLR.L D0
00000000                           216     CLR.L D1
00000000                           217     MOVE.L \1(A7), D1
00000000                           218     MOVE.W #20, D0
00000000                           219     trap #15
00000000                           220     ENDM
00000000                           221  ; -----------------------------------------------------------------------------
00000000                           222  OUTPUT_BOOLEAN      MACRO
00000000                           223  ; Input    - \1  ; Offset's variable with boolean value
00000000                           224  ; Modifies - 
00000000                           225  ; -----------------------------------------------------------------------------
00000000                           226     CLR.L D0
00000000                           227     CLR.L D1
00000000                           228     MOVE.W \1(A7), D1
00000000                           229     MOVE.W #20, D0
00000000                           230     trap #15
00000000                           231     ENDM
00000000                           232  ; -----------------------------------------------------------------------------
00000000                           233  PRINT_STRING      MACRO
00000000                           234  * Macro to add.                          
00000000                           235  ; Input    - \1  ; buffer direction
00000000                           236  ;          - \2  ; offset variable
00000000                           237  ;          - \3  ; size string / 2
00000000                           238  ; Modifies - 
00000000                           239  ; -----------------------------------------------------------------------------
00000000                           240      MOVE.L \1,A1
00000000                           241      MOVE.L A7, A2
00000000                           242      ADD.L \2, A2
00000000                           243      MOVE.L \3, D1
00000000                           244      CMP.L #0, D1
00000000                           245      BEQ END_PRINT\@
00000000                           246  NEXT_CHAR_TO_PRINT\@ 
00000000                           247      MOVE.W  (A2)+, D0
00000000                           248      CMP.W #8224, D0
00000000                           249      BEQ END_PRINT\@
00000000                           250      MOVE.B D0 ,(A1)+
00000000                           251      SUB.L #1, D1
00000000                           252      CMP.L #0, D1
00000000                           253      BNE NEXT_CHAR_TO_PRINT\@
00000000                           254  END_PRINT\@
00000000                           255      MOVE.W #1, D0
00000000                           256      MOVE.L \3, D1
00000000                           257      MOVE.L \1,A1
00000000                           258      TRAP #15
00000000                           259  
00000000                           260      ENDM
00000000                           261  ; -----------------------------------------------------------------------------
00000000                           262  PRINT_NEW_LINE      MACRO
00000000                           263  ; Input    - \1  : size string
00000000                           264  ; -----------------------------------------------------------------------------
00000000                           265      MOVE.W  #0, D0
00000000                           266      MOVE.L \1, A1
00000000                           267      MOVE.L #0, D1
00000000                           268      TRAP      #15
00000000                           269      ENDM
00000000                           270  ; -----------------------------------------------------------------------------
00000000                           271  RETURN_STRING      MACRO
00000000                           272  ; Input    - \1  ; offset return
00000000                           273  ;          - \2  ; offset variable
00000000                           274  ;          - \3  ; size string
00000000                           275  ; Modifies - 
00000000                           276  ; -----------------------------------------------------------------------------
00000000                           277      MOVE.L A7, A2
00000000                           278      ADD.L \1, A2
00000000                           279      MOVE.L A7, A1
00000000                           280      ADD.L \2, A1
00000000                           281      MOVE.L \3, D1
00000000                           282      CMP.L #0, D1
00000000                           283      BEQ FINAL_RETURN_STRING\@
00000000                           284  NEXT_CHAR\@ 
00000000                           285      MOVE.W (A1)+, D2
00000000                           286      MOVE.W D2, (A2)+
00000000                           287      SUB.L #2, D1
00000000                           288      CMP.L #0, D1
00000000                           289      BNE NEXT_CHAR\@ 
00000000                           290  FINAL_RETURN_STRING\@
00000000                           291      ENDM 
00000000                           292  ARITH_OPERATION_SUM     MACRO
00000000                           293  * Macro to add.
00000000                           294  * Parameters: \1: Param1 destination
00000000                           295  *             \2: Param2 source1
00000000                           296  *             \3: Param3 source2
00000000                           297  * Modifies  : D0
00000000                           298  *-----------------------------------------------------------
00000000                           299      CLR.L D0
00000000                           300      CLR.L D1
00000000                           301  
00000000                           302      MOVE.L \2(A7), D0
00000000                           303      MOVE.L \3(A7), D1
00000000                           304      
00000000                           305      ADD.L D1,D0
00000000                           306      
00000000                           307      MOVE.L D0, \1(A7)
00000000                           308      
00000000                           309      ENDM
00000000                           310  ARITH_OPERATION_SUB     MACRO
00000000                           311  * Macro to add.                          
00000000                           312  * Parameters: \1: Param1 destination
00000000                           313  *             \2: Param2 source1
00000000                           314  *             \3: Param3 source2
00000000                           315  * Modifies  : D0
00000000                           316  *-----------------------------------------------------------
00000000                           317      CLR.L D0
00000000                           318      CLR.L D1
00000000                           319  
00000000                           320      MOVE.L \2(A7), D0
00000000                           321      MOVE.L \3(A7), D1
00000000                           322      
00000000                           323      SUB.L D1,D0
00000000                           324      
00000000                           325      MOVE.L D0, \1(A7)
00000000                           326      
00000000                           327      ENDM
00000000                           328  ARITH_OPERATION_MULT    MACRO
00000000                           329  * Macro to add.                          
00000000                           330  * Parameters: \1: Param1 destination
00000000                           331  *             \2: Param2 source1
00000000                           332  *             \3: Param3 source2
00000000                           333  * Modifies  : D0
00000000                           334  *-----------------------------------------------------------
00000000                           335      CLR.L D0
00000000                           336      CLR.L D1
00000000                           337  
00000000                           338      MOVE.L \2(A7), D0
00000000                           339      MOVE.L \3(A7), D1
00000000                           340      
00000000                           341      MULS D1,D0
00000000                           342      
00000000                           343      MOVE.L D0, \1(A7)
00000000                           344      
00000000                           345      ENDM
00000000                           346  ARITH_OPERATION_DIV     MACRO
00000000                           347  * Macro to add.
00000000                           348  * Parameters: \1: Param1 destination
00000000                           349  *             \2: Param2 source1
00000000                           350  *             \3: Param3 source2
00000000                           351  * Modifies  : D0
00000000                           352  *-----------------------------------------------------------
00000000                           353      CLR.L D0
00000000                           354      CLR.L D1
00000000                           355  
00000000                           356      MOVE.L \2(A7), D0
00000000                           357      MOVE.L \3(A7), D1
00000000                           358      
00000000                           359      DIVU D1,D0
00000000                           360      
00000000                           361      MOVE.L D0, \1(A7)
00000000                           362      
00000000                           363      ENDM
00000000                           364  LOGICAL_OPERATION_AND   MACRO
00000000                           365  * Macro to add.                          
00000000                           366  * Parameters: \1: Param1 destination                        
00000000                           367  *             \2: Param2 source1
00000000                           368  * Modifies  : D0
00000000                           369  *-----------------------------------------------------------
00000000                           370      CLR.L D0
00000000                           371      CLR.L D1
00000000                           372  
00000000                           373      MOVE.W \1(A7), D0
00000000                           374      MOVE.W \2(A7), D1
00000000                           375      
00000000                           376      AND.W D1,D0
00000000                           377      
00000000                           378      MOVE.W D0, \1(A7)
00000000                           379      
00000000                           380      ENDM
00000000                           381  LOGICAL_OPERATION_OR    MACRO
00000000                           382  * Macro to add.                          
00000000                           383  * Parameters: \1: Param1 destination                        
00000000                           384  *             \2: Param2 source1
00000000                           385  * Modifies  : D0
00000000                           386  *-----------------------------------------------------------
00000000                           387      CLR.L D0
00000000                           388      CLR.L D1
00000000                           389  
00000000                           390      MOVE.W \1(A7), D0
00000000                           391      MOVE.W \2(A7), D1
00000000                           392      
00000000                           393      OR.W D1,D0
00000000                           394      
00000000                           395      MOVE.W D0, \1(A7)
00000000                           396      
00000000                           397      ENDM
00000000                           398  COMPARISON_EQUAL_INT    MACRO
00000000                           399  * Macro to add.                          
00000000                           400  * Parameters: \1: Param1 destination                        
00000000                           401  *             \2: Param2 source1
00000000                           402  *             \3: Param3 source2
00000000                           403  * Modifies  : D0, D1
00000000                           404  *-----------------------------------------------------------
00000000                           405      CLR.L D0
00000000                           406      CLR.L D1
00000000                           407  
00000000                           408      MOVE.L \2(A7), D0
00000000                           409      MOVE.L \3(A7), D1
00000000                           410      
00000000                           411      CMP.L D1, D0
00000000                           412      BEQ IS_TRUE\@
00000000                           413      MOVE.W  #0, \1(A7)
00000000                           414      BRA END_COMPARISON\@
00000000                           415  IS_TRUE\@
00000000                           416      MOVE.W  #1, \1(A7)
00000000                           417  END_COMPARISON\@
00000000                           418      ENDM
00000000                           419  COMPARISON_EQUAL_BOOL   MACRO
00000000                           420  * Macro to add.                          
00000000                           421  * Parameters: \1: Param1 destination                        
00000000                           422  *             \2: Param2 source1
00000000                           423  *             \3: Param3 source2
00000000                           424  * Modifies  : D0, D1
00000000                           425  *-----------------------------------------------------------
00000000                           426      CLR.L D0
00000000                           427      CLR.L D1
00000000                           428  
00000000                           429      MOVE.W \2(A7), D0
00000000                           430      MOVE.W \3(A7), D1
00000000                           431      
00000000                           432      CMP.W D1, D0
00000000                           433      BEQ IS_TRUE\@
00000000                           434      MOVE.W  #0, \1(A7)
00000000                           435      BRA END_COMPARISON\@
00000000                           436  IS_TRUE\@
00000000                           437      MOVE.W  #1, \1(A7)
00000000                           438  END_COMPARISON\@
00000000                           439      ENDM
00000000                           440  COMPARISON_NOT_EQUAL_INT    MACRO
00000000                           441  * Macro to add.                          
00000000                           442  * Parameters: \1: Param1 destination                        
00000000                           443  *             \2: Param2 source1
00000000                           444  *             \3: Param3 source2
00000000                           445  * Modifies  : D0, D1
00000000                           446  *-----------------------------------------------------------
00000000                           447      CLR.L D0
00000000                           448      CLR.L D1
00000000                           449  
00000000                           450      MOVE.L \2(A7), D0
00000000                           451      MOVE.L \3(A7), D1
00000000                           452      
00000000                           453      CMP.L D1, D0
00000000                           454      BNE IS_TRUE\@
00000000                           455      MOVE.W  #0, \1(A7)
00000000                           456      BRA END_COMPARISON\@
00000000                           457  IS_TRUE\@
00000000                           458      MOVE.W  #1, \1(A7)
00000000                           459  END_COMPARISON\@
00000000                           460     ENDM
00000000                           461  COMPARISON_NOT_EQUAL_BOOL   MACRO
00000000                           462  * Macro to add.                          
00000000                           463  * Parameters: \1: Param1 destination                        
00000000                           464  *             \2: Param2 source1
00000000                           465  *             \3: Param3 source2
00000000                           466  * Modifies  : D0, D1
00000000                           467  *-----------------------------------------------------------
00000000                           468      CLR.L D0
00000000                           469      CLR.L D1
00000000                           470  
00000000                           471      MOVE.W \2(A7), D0
00000000                           472      MOVE.W \3(A7), D1
00000000                           473      
00000000                           474      CMP.W D1, D0
00000000                           475      BNE IS_TRUE\@
00000000                           476      MOVE.W  #0, \1(A7)
00000000                           477      BRA END_COMPARISON\@
00000000                           478  IS_TRUE\@
00000000                           479      MOVE.W  #1, \1(A7)
00000000                           480  END_COMPARISON\@
00000000                           481     ENDM
00000000                           482  COMPARISON_GREATER      MACRO
00000000                           483  * Macro to add.                          
00000000                           484  * Parameters: \1: Param1 destination                        
00000000                           485  *             \2: Param2 source1
00000000                           486  *             \3: Param3 source2
00000000                           487  * Modifies  : D0, D1
00000000                           488  *-----------------------------------------------------------
00000000                           489      CLR.L D0
00000000                           490      CLR.L D1
00000000                           491  
00000000                           492      MOVE.L \2(A7), D0
00000000                           493      MOVE.L \3(A7), D1
00000000                           494      
00000000                           495      CMP.L D1, D0
00000000                           496      BGT IS_TRUE\@
00000000                           497      MOVE.W  #0, \1(A7)
00000000                           498      BRA END_COMPARISON\@
00000000                           499  IS_TRUE\@
00000000                           500      MOVE.W  #1, \1(A7)
00000000                           501  END_COMPARISON\@
00000000                           502     ENDM
00000000                           503  COMPARISON_GREATER_OR_EQUAL     MACRO
00000000                           504  * Macro to add.                          
00000000                           505  * Parameters: \1: Param1 destination                        
00000000                           506  *             \2: Param2 source1
00000000                           507  *             \3: Param3 source2
00000000                           508  * Modifies  : D0, D1
00000000                           509  *-----------------------------------------------------------
00000000                           510      CLR.L D0
00000000                           511      CLR.L D1
00000000                           512  
00000000                           513      MOVE.L \2(A7), D0
00000000                           514      MOVE.L \3(A7), D1
00000000                           515      
00000000                           516      CMP.L D1, D0
00000000                           517      BGE IS_TRUE\@
00000000                           518      MOVE.W  #0, \1(A7)
00000000                           519      BRA END_COMPARISON\@
00000000                           520  IS_TRUE\@
00000000                           521      MOVE.W  #1, \1(A7)
00000000                           522  END_COMPARISON\@
00000000                           523     ENDM
00000000                           524  COMPARISON_LOWER    MACRO
00000000                           525  * Macro to add.                          
00000000                           526  * Parameters: \1: Param1 destination                        
00000000                           527  *             \2: Param2 source1
00000000                           528  *             \3: Param3 source2
00000000                           529  * Modifies  : D0, D1
00000000                           530  *-----------------------------------------------------------
00000000                           531      CLR.L D0
00000000                           532      CLR.L D1
00000000                           533  
00000000                           534      MOVE.L \2(A7), D0
00000000                           535      MOVE.L \3(A7), D1
00000000                           536      
00000000                           537      CMP.L D1, D0
00000000                           538      BLT IS_TRUE\@
00000000                           539      MOVE.W  #0, \1(A7)
00000000                           540      BRA END_COMPARISON\@
00000000                           541  IS_TRUE\@
00000000                           542      MOVE.W  #1, \1(A7)
00000000                           543  END_COMPARISON\@
00000000                           544     ENDM
00000000                           545  COMPARISON_LOWER_OR_EQUAL   MACRO
00000000                           546  * Macro to add.                          
00000000                           547  * Parameters: \1: Param1 destination                        
00000000                           548  *             \2: Param2 source1
00000000                           549  *             \3: Param3 source2
00000000                           550  * Modifies  : D0, D1
00000000                           551  *-----------------------------------------------------------
00000000                           552      CLR.L D0
00000000                           553      CLR.L D1
00000000                           554  
00000000                           555      MOVE.L \2(A7), D0
00000000                           556      MOVE.L \3(A7), D1
00000000                           557      
00000000                           558      CMP.L D1, D0
00000000                           559      BLE IS_TRUE\@
00000000                           560      MOVE.W  #0, \1(A7)
00000000                           561      BRA END_COMPARISON\@
00000000                           562  IS_TRUE\@
00000000                           563      MOVE.W  #1, \1(A7)
00000000                           564  END_COMPARISON\@
00000000                           565     ENDM
00000000                           566  -------------------- end include --------------------
00000000                           567  * -------------------------------------------------------- *
00000000                           568  
00000000                           569  * ----------------------- MAIN PROGRAM -------------------- *
00001000                           570      ORG    $1000
00001000                           571  START:
00001000                           572  
00001000                           573  * CALL MAIN PROCEDURE *
00001000                           574  * Intermediate code => [procedureCallMain, null, null, [OPERATOR. Type operator: procedure, value: 2]]
00001000  4EB9 0000106C            575      JSR PROCEDURE_MAIN
00001006  FFFF FFFF                576      SIMHALT
0000100A                           577  
0000100A                           578  * INITIAL LABEL (PROCEDURE) *
0000100A                           579  * Intermediate code => [procedureName, null, null, [OPERATOR. Type operator: procedure, value: 0]]
0000100A                           580  PROCEDURE_GETINPUTNUM:
0000100A                           581  
0000100A                           582  * PREAMBLE (PROCEDURE) *
0000100A                           583  * Intermediate code => [procedurePreamble, null, null, [OPERATOR. Type operator: procedure, value: 0]]
0000100A  9FFC 00000000            584      SUB.L #0, A7
00001010  598F                     585      SUB.L #4, A7 ; Block pointer
00001012  2EBC 00000000            586      MOVE.L #0, (A7)
00001018  2C4F                     587      MOVE.L A7, A6
0000101A  518E                     588      SUB.L #8, A6 ; Update stack pointer for a new activation block
0000101C                           589  
0000101C                           590  * STANDARD INPUT *
0000101C                           591  * Intermediate code => [standardInput, null, null, [OPERATOR. Type operator: variable, value: 0]]
0000101C                           592m     STANDARD_INPUT -4
0000101C                           593m * MACRO TO ADD.                          
0000101C                           594m * PARAMETERS: \1 ; OFFSET VARIABLE
0000101C                           595m * MODIFIES  : D0, D1
0000101C                           596m *-----------------------------------------------------------
00001028                           597  
00001028                           598  * ASSIGNATION VARIABLE *
00001028                           599  * Intermediate code => [assign, [OPERATOR. Type operator: variable, value: 0], null, [OPERATOR. Type operator: variable, value: 1]]
00001028                           600m     ASSIGNATION_VARIABLE_INTEGER -4, -8
00001028                           601m * MACRO TO ADD.                          
00001028                           602m * PARAMETERS: \1: PARAM1   ;SOURCE1
00001028                           603m *             \2: PARAM2   ;DESTINATION
00001028                           604m * MODIFIES  : NOTHING
00001028                           605m *-----------------------------------------------------------
0000102E                           606  
0000102E                           607  * RETURN (PROCEDURE) *
0000102E                           608  * Intermediate code => [procedureReturn, [OPERATOR. Type operator: procedure, value: 0], null, [OPERATOR. Type operator: variable, value: 1]]
0000102E  202F FFF8                609      MOVE.L -8(A7), D0
00001032  2F40 0008                610      MOVE.L D0, 8(A7)
00001036                           611  
00001036                           612  * PREAMBLE END (PROCEDURE) *
00001036                           613  * Intermediate code => [procedureEnd, null, null, [OPERATOR. Type operator: procedure, value: 0]]
00001036  588F                     614      ADD.L #4, A7
00001038  4E75                     615      RTS
0000103A                           616  
0000103A                           617  * INITIAL LABEL (PROCEDURE) *
0000103A                           618  * Intermediate code => [procedureName, null, null, [OPERATOR. Type operator: procedure, value: 1]]
0000103A                           619  PROCEDURE_GETSQUARE:
0000103A                           620  
0000103A                           621  * PREAMBLE (PROCEDURE) *
0000103A                           622  * Intermediate code => [procedurePreamble, null, null, [OPERATOR. Type operator: procedure, value: 1]]
0000103A  598F                     623      SUB.L #4, A7
0000103C  598F                     624      SUB.L #4, A7 ; Block pointer
0000103E  2EBC 00000000            625      MOVE.L #0, (A7)
00001044  2C4F                     626      MOVE.L A7, A6
00001046  518E                     627      SUB.L #8, A6 ; Update stack pointer for a new activation block
00001048                           628  
00001048                           629  * ARITHMETIC OPERATION *
00001048                           630  * Intermediate code => [mult, [OPERATOR. Type operator: variable, value: 2], [OPERATOR. Type operator: variable, value: 2], [OPERATOR. Type operator: variable, value: 3]]
00001048                           631m     ARITH_OPERATION_MULT -4, 4, 4
00001048                           632m * MACRO TO ADD.                          
00001048                           633m * PARAMETERS: \1: PARAM1 DESTINATION
00001048                           634m *             \2: PARAM2 SOURCE1
00001048                           635m *             \3: PARAM3 SOURCE2
00001048                           636m * MODIFIES  : D0
00001048                           637m *-----------------------------------------------------------
0000105A                           638  
0000105A                           639  * ASSIGNATION VARIABLE *
0000105A                           640  * Intermediate code => [assign, [OPERATOR. Type operator: variable, value: 3], null, [OPERATOR. Type operator: variable, value: 4]]
0000105A                           641m     ASSIGNATION_VARIABLE_INTEGER -4, -8
0000105A                           642m * MACRO TO ADD.                          
0000105A                           643m * PARAMETERS: \1: PARAM1   ;SOURCE1
0000105A                           644m *             \2: PARAM2   ;DESTINATION
0000105A                           645m * MODIFIES  : NOTHING
0000105A                           646m *-----------------------------------------------------------
00001060                           647  
00001060                           648  * RETURN (PROCEDURE) *
00001060                           649  * Intermediate code => [procedureReturn, [OPERATOR. Type operator: procedure, value: 1], null, [OPERATOR. Type operator: variable, value: 4]]
00001060  202F FFF8                650      MOVE.L -8(A7), D0
00001064  2F40 000C                651      MOVE.L D0, 12(A7)
00001068                           652  
00001068                           653  * PREAMBLE END (PROCEDURE) *
00001068                           654  * Intermediate code => [procedureEnd, null, null, [OPERATOR. Type operator: procedure, value: 1]]
00001068  508F                     655      ADD.L #8, A7
0000106A  4E75                     656      RTS
0000106C                           657  
0000106C                           658  * INITIAL LABEL (PROCEDURE) *
0000106C                           659  * Intermediate code => [procedureName, null, null, [OPERATOR. Type operator: procedure, value: 2]]
0000106C                           660  PROCEDURE_MAIN:
0000106C                           661  
0000106C                           662  * PREAMBLE (PROCEDURE) *
0000106C                           663  * Intermediate code => [procedurePreamble, null, null, [OPERATOR. Type operator: procedure, value: 2]]
0000106C  9FFC 00000000            664      SUB.L #0, A7
00001072  598F                     665      SUB.L #4, A7 ; Block pointer
00001074  2EBC 00000000            666      MOVE.L #0, (A7)
0000107A  2C4F                     667      MOVE.L A7, A6
0000107C  9DFC 0000003C            668      SUB.L #60, A6 ; Update stack pointer for a new activation block
00001082                           669  
00001082                           670  * ASSIGNATION VARIABLE *
00001082                           671  * Intermediate code => [assign, [OPERATOR. Type operator: string_value, value: "Put a number: "], null, [OPERATOR. Type operator: variable, value: 5]]
00001082                           672m     ASSIGNATION_STRING #-28, #string_id_0, #28
00001082                           673m * MACRO TO ADD.                          
00001082                           674m * PARAMETERS: \1: PARAM1   ;OFFSET VARIABLE
00001082                           675m *             \2: PARAM1   ;LABEL VARIABLE
00001082                           676m *             \3: PARAM1   ;SIZE STRING
00001082                           677m * MODIFIES  : D0, D1
00001082                           678m *-----------------------------------------------------------
000010AC                           679  
000010AC                           680  * STANDARD OUTPUT *
000010AC                           681  * Intermediate code => [standardOutput, null, null, [OPERATOR. Type operator: variable, value: 5]]
000010AC  42B9 00001208            682      CLR.L buffer  
000010B2                           683m     PRINT_STRING #buffer, #-28, #14
000010B2                           684m * MACRO TO ADD.                          
000010B2                           685m ; INPUT    - #BUFFER  ; BUFFER DIRECTION
000010B2                           686m ;          - #-28  ; OFFSET VARIABLE
000010B2                           687m ;          - #14  ; SIZE STRING / 2
000010B2                           688m ; MODIFIES - 
000010B2                           689m ; -----------------------------------------------------------------------------
000010F0                           690  
000010F0                           691  * PRINT NEW LINE *
000010F0                           692m     PRINT_NEW_LINE #buffer 
000010F0                           693m ; INPUT    - #BUFFER  : SIZE STRING
000010F0                           694m ; -----------------------------------------------------------------------------
000010FE                           695  
000010FE                           696  * CALL PROCEDURE *
000010FE                           697  * Intermediate code => [procedureCall, null, null, [OPERATOR. Type operator: procedure, value: 0]]
000010FE  2A4F                     698      MOVE.L A7, A5
00001100  2E4E                     699      MOVE.L A6, A7
00001102  2F0D                     700      MOVE.L A5, -(A7)  ;previous block pointer
00001104  598F                     701      SUB.L #4, A7 ; Memory space for return
00001106  598F                     702      SUB.L #4, A7 ; Memory space for PC
00001108  588F                     703      ADD.L #4, A7
0000110A  4EB8 100A                704      JSR PROCEDURE_GETINPUTNUM
0000110E  588F                     705      ADD.L #4, A7 ;Jump return
00001110  2A5F                     706      MOVE.L (A7)+, A5 ;Get block pointer
00001112  2C4F                     707      MOVE.L A7, A6  ;A6 => Stack pointer
00001114  2E4D                     708      MOVE.L A5, A7 ;Update out block pointer
00001116                           709  
00001116                           710  * ASSIGNATION VARIABLE *
00001116                           711  * Intermediate code => [assign, [OPERATOR. Type operator: procedure, value: 0], null, [OPERATOR. Type operator: variable, value: 6]]
00001116                           712m     RETURN_GET_INTEGER -32
00001116                           713m * MACRO TO ADD. 
00001116                           714m * PARAMETERS: \1: PARAM1   ; OFFSET VARIABLE
00001116                           715m * MODIFIES  : A5, A6, A7
00001116                           716m *-----------------------------------------------------------
00001128                           717  
00001128                           718  * ASSIGNATION VARIABLE *
00001128                           719  * Intermediate code => [assign, [OPERATOR. Type operator: variable, value: 6], null, [OPERATOR. Type operator: variable, value: 7]]
00001128                           720m     ASSIGNATION_VARIABLE_INTEGER -32, -36
00001128                           721m * MACRO TO ADD.                          
00001128                           722m * PARAMETERS: \1: PARAM1   ;SOURCE1
00001128                           723m *             \2: PARAM2   ;DESTINATION
00001128                           724m * MODIFIES  : NOTHING
00001128                           725m *-----------------------------------------------------------
0000112E                           726  
0000112E                           727  * CALL PROCEDURE *
0000112E                           728  * Intermediate code => [procedureCall, null, null, [OPERATOR. Type operator: procedure, value: 1]]
0000112E  2A4F                     729      MOVE.L A7, A5
00001130  2E4E                     730      MOVE.L A6, A7
00001132  2F0D                     731      MOVE.L A5, -(A7)  ;previous block pointer
00001134  598F                     732      SUB.L #4, A7 ; Memory space for return
00001136  598F                     733      SUB.L #4, A7 ; Memory space for PC
00001138                           734      * ---- BEGIN PARAMETERS  ----*
00001138  4280                     735      CLR.L D0 
0000113A  284F                     736      MOVE.L A7, A4 
0000113C  2E4D                     737      MOVE.L A5, A7 
0000113E  202F FFDC                738      MOVE.L -36(A7), D0
00001142  2E4C                     739      MOVE.L A4, A7 
00001144  2F00                     740      MOVE.L D0, -(A7) 
00001146                           741      * ---- END PARAMETERS  ----*
00001146  508F                     742      ADD.L #8, A7
00001148  4EB8 103A                743      JSR PROCEDURE_GETSQUARE
0000114C  588F                     744      ADD.L #4, A7 ;Jump return
0000114E  2A5F                     745      MOVE.L (A7)+, A5 ;Get block pointer
00001150  2C4F                     746      MOVE.L A7, A6  ;A6 => Stack pointer
00001152  2E4D                     747      MOVE.L A5, A7 ;Update out block pointer
00001154                           748  
00001154                           749  * ASSIGNATION VARIABLE *
00001154                           750  * Intermediate code => [assign, [OPERATOR. Type operator: procedure, value: 1], null, [OPERATOR. Type operator: variable, value: 8]]
00001154                           751m     RETURN_GET_INTEGER -40
00001154                           752m * MACRO TO ADD. 
00001154                           753m * PARAMETERS: \1: PARAM1   ; OFFSET VARIABLE
00001154                           754m * MODIFIES  : A5, A6, A7
00001154                           755m *-----------------------------------------------------------
00001166                           756  
00001166                           757  * ASSIGNATION VARIABLE *
00001166                           758  * Intermediate code => [assign, [OPERATOR. Type operator: variable, value: 8], null, [OPERATOR. Type operator: variable, value: 9]]
00001166                           759m     ASSIGNATION_VARIABLE_INTEGER -40, -44
00001166                           760m * MACRO TO ADD.                          
00001166                           761m * PARAMETERS: \1: PARAM1   ;SOURCE1
00001166                           762m *             \2: PARAM2   ;DESTINATION
00001166                           763m * MODIFIES  : NOTHING
00001166                           764m *-----------------------------------------------------------
0000116C                           765  
0000116C                           766  * ASSIGNATION VARIABLE *
0000116C                           767  * Intermediate code => [assign, [OPERATOR. Type operator: string_value, value: "Square: "], null, [OPERATOR. Type operator: variable, value: 10]]
0000116C                           768m     ASSIGNATION_STRING #-60, #string_id_1, #16
0000116C                           769m * MACRO TO ADD.                          
0000116C                           770m * PARAMETERS: \1: PARAM1   ;OFFSET VARIABLE
0000116C                           771m *             \2: PARAM1   ;LABEL VARIABLE
0000116C                           772m *             \3: PARAM1   ;SIZE STRING
0000116C                           773m * MODIFIES  : D0, D1
0000116C                           774m *-----------------------------------------------------------
00001196                           775  
00001196                           776  * STANDARD OUTPUT *
00001196                           777  * Intermediate code => [standardOutput, null, null, [OPERATOR. Type operator: variable, value: 10]]
00001196  42B9 00001208            778      CLR.L buffer  
0000119C                           779m     PRINT_STRING #buffer, #-60, #8
0000119C                           780m * MACRO TO ADD.                          
0000119C                           781m ; INPUT    - #BUFFER  ; BUFFER DIRECTION
0000119C                           782m ;          - #-60  ; OFFSET VARIABLE
0000119C                           783m ;          - #8  ; SIZE STRING / 2
0000119C                           784m ; MODIFIES - 
0000119C                           785m ; -----------------------------------------------------------------------------
000011DA                           786  
000011DA                           787  * PRINT NEW LINE *
000011DA                           788m     PRINT_NEW_LINE #buffer 
000011DA                           789m ; INPUT    - #BUFFER  : SIZE STRING
000011DA                           790m ; -----------------------------------------------------------------------------
000011E8                           791  
000011E8                           792  * STANDARD OUTPUT *
000011E8                           793  * Intermediate code => [standardOutput, null, null, [OPERATOR. Type operator: variable, value: 9]]
000011E8                           794m     OUTPUT_INTEGER -44
000011E8                           795m ; INPUT    - -44  ; OFFSET's variable with integer value
000011E8                           796m ; MODIFIES - 
000011E8                           797m ; -----------------------------------------------------------------------------
000011F6                           798  
000011F6                           799  * PRINT NEW LINE *
000011F6                           800m     PRINT_NEW_LINE #buffer 
000011F6                           801m ; INPUT    - #BUFFER  : SIZE STRING
000011F6                           802m ; -----------------------------------------------------------------------------
00001204                           803  
00001204                           804  * PREAMBLE END (PROCEDURE) *
00001204                           805  * Intermediate code => [procedureEnd, null, null, [OPERATOR. Type operator: procedure, value: 2]]
00001204  588F                     806      ADD.L #4, A7
00001206  4E75                     807      RTS
00001208                           808  
00001208                           809  *Put variables and constants here
00001208                           810  buffer ds.b 1024
00001608= 50 75 74 20 61 20 ...    811  string_id_0 dc.b 'Put a number: ', 0
00001617= 53 71 75 61 72 65 ...    812  string_id_1 dc.b 'Square: ', 0
00001620                           813  
00001620                           814      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ARITH_OPERATION_DIV  1E38
ARITH_OPERATION_MULT  1CC4
ARITH_OPERATION_SUB  1B4F
ARITH_OPERATION_SUM  19F4
ASSIGNATION_BOOLEAN  F6
ASSIGNATION_INTEGER  0
ASSIGNATION_STRING  1EC
ASSIGNATION_VARIABLE_BOOLEAN  4FE
ASSIGNATION_VARIABLE_INTEGER  408
ASSIGNATION_VARIABLE_STRING  5F4
BUFFER              1208
COMPARISON_EQUAL_BOOL  2450
COMPARISON_EQUAL_INT  2267
COMPARISON_GREATER  2A09
COMPARISON_GREATER_OR_EQUAL  2BF1
COMPARISON_LOWER    2DD9
COMPARISON_LOWER_OR_EQUAL  2FC1
COMPARISON_NOT_EQUAL_BOOL  2821
COMPARISON_NOT_EQUAL_INT  2639
END_PRINT_13        11CC
END_PRINT_6         10E2
FILL_NEXT_CHAR_12   1188
FILL_NEXT_CHAR_5    109E
LOGICAL_OPERATION_AND  1F92
LOGICAL_OPERATION_OR  20FD
NEXT_CHAR_TO_PRINT_13  11B6
NEXT_CHAR_TO_PRINT_6  10CC
OUTPUT_BOOLEAN      13D8
OUTPUT_INTEGER      12E6
PRINT_NEW_LINE      1742
PRINT_STRING        14CA
PROCEDURE_GETINPUTNUM  100A
PROCEDURE_GETSQUARE  103A
PROCEDURE_MAIN      106C
PUT_STRING_IN_PARAM  F45
RETURN_GET_BOOLEAN  AD7
RETURN_GET_INTEGER  99E
RETURN_GET_STRING   C08
RETURN_STRING       180A
STANDARD_INPUT      11E5
START               1000
STRING_COPIED_12    1196
STRING_COPIED_5     10AC
STRING_ID_0         1608
STRING_ID_1         1617
